import{_ as s,o as n,c as a,a as l}from"./app.5bc66df0.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"Making requests","slug":"making-requests","link":"#making-requests","children":[]}],"relativePath":"Usage.md"}'),p={name:"Usage.md"},o=l(`<p><a href="https://github.com/qdrant/rust-client#usage" target="_blank" rel="noreferrer"></a></p><p>Run Qdrant with enabled gRPC interface:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># With env variable</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run -p 6333:6333 -p 6334:6334 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    -e QDRANT__SERVICE__GRPC_PORT=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">6334</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    qdrant/qdrant</span></span>
<span class="line"></span></code></pre></div><p>Or by updating the configuration file:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki"><code><span class="line"><span style="color:#F07178;">service</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">grpc_port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6334</span></span>
<span class="line"></span></code></pre></div><p>More info about gRPC in\xA0<a href="https://qdrant.tech/documentation/quick_start/#grpc" target="_blank" rel="noreferrer">documentation</a>.</p><h3 id="making-requests" tabindex="-1">Making requests <a class="header-anchor" href="#making-requests" aria-hidden="true">#</a></h3><p><a href="https://github.com/qdrant/rust-client#making-requests" target="_blank" rel="noreferrer"></a></p><p>Add necessary dependencies:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">cargo add qdrant-client anyhow tonic tokio serde-json --features tokio/rt-multi-thread</span></span>
<span class="line"></span></code></pre></div><p>Add search example from\xA0<a href="https://github.com/qdrant/rust-client/blob/master/examples/search.rs" target="_blank" rel="noreferrer"><code>examples/search.rs</code></a>\xA0to your\xA0<code>src/main.rs</code>:</p><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> anyhow</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> qdrant_client</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">prelude</span><span style="color:#89DDFF;">::*;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> qdrant_client</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">qdrant</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">vectors_config</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Config</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> qdrant_client</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">qdrant</span><span style="color:#89DDFF;">::{</span></span>
<span class="line"><span style="color:#FFCB6B;">    Condition</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> CreateCollection</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> Filter</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> SearchPoints</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> VectorParams</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> VectorsConfig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> serde_json</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">json</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">tokio</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">main</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F78C6C;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Result</span><span style="color:#89DDFF;">&lt;()&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">    // Example of top level client</span></span>
<span class="line"><span style="color:#676E95;">    // You may also use tonic-generated client from \`src/qdrant.rs\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">QdrantClient</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from_url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:6334</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">()?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> collections_list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">list_collections</span><span style="color:#89DDFF;">().</span><span style="color:#89DDFF;">await</span><span style="color:#89DDFF;">?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">dbg!</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">collections_list</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">    // collections_list = ListCollectionsResponse {</span></span>
<span class="line"><span style="color:#676E95;">    //     collections: [</span></span>
<span class="line"><span style="color:#676E95;">    //         CollectionDescription {</span></span>
<span class="line"><span style="color:#676E95;">    //             name: &quot;test&quot;,</span></span>
<span class="line"><span style="color:#676E95;">    //         },</span></span>
<span class="line"><span style="color:#676E95;">    //     ],</span></span>
<span class="line"><span style="color:#676E95;">    //     time: 1.78e-6,</span></span>
<span class="line"><span style="color:#676E95;">    // }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> collection_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete_collection</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">collection_name</span><span style="color:#89DDFF;">).</span><span style="color:#89DDFF;">await</span><span style="color:#89DDFF;">?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    client</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_collection</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#FFCB6B;">CreateCollection</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            collection_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> collection_name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">            vectors_config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">VectorsConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Config</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Params</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">VectorParams</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                    distance</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Distance</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Cosine</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">..</span><span style="color:#FFCB6B;">Default</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">})),</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}),</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">..</span><span style="color:#FFCB6B;">Default</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;">await</span><span style="color:#89DDFF;">?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> collection_info </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">collection_info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">collection_name</span><span style="color:#89DDFF;">).</span><span style="color:#89DDFF;">await</span><span style="color:#89DDFF;">?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">dbg!</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">collection_info</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> payload</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Payload</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">json!</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">baz</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qux</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">quux</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">try_into</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> points </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">vec!</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">PointStruct</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">vec!</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">.;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> payload</span><span style="color:#89DDFF;">)];</span></span>
<span class="line"><span style="color:#A6ACCD;">    client</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">upsert_points_blocking</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">collection_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">None</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> points</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">None</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;">await</span><span style="color:#89DDFF;">?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> search_result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">search_points</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#FFCB6B;">SearchPoints</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            collection_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> collection_name</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">            vector</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">vec!</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">.;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">            filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Filter</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">([</span><span style="color:#FFCB6B;">Condition</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">matches</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">)])),</span></span>
<span class="line"><span style="color:#A6ACCD;">            limit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            with_payload</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(true.</span><span style="color:#82AAFF;">into</span><span style="color:#89DDFF;">()),</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">..</span><span style="color:#FFCB6B;">Default</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;">await</span><span style="color:#89DDFF;">?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">dbg!</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">search_result</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">    // search_result = SearchResponse {</span></span>
<span class="line"><span style="color:#676E95;">    //     result: [</span></span>
<span class="line"><span style="color:#676E95;">    //         ScoredPoint {</span></span>
<span class="line"><span style="color:#676E95;">    //             id: Some(</span></span>
<span class="line"><span style="color:#676E95;">    //                 PointId {</span></span>
<span class="line"><span style="color:#676E95;">    //                     point_id_options: Some(</span></span>
<span class="line"><span style="color:#676E95;">    //                         Num(</span></span>
<span class="line"><span style="color:#676E95;">    //                             0,</span></span>
<span class="line"><span style="color:#676E95;">    //                         ),</span></span>
<span class="line"><span style="color:#676E95;">    //                     ),</span></span>
<span class="line"><span style="color:#676E95;">    //                 },</span></span>
<span class="line"><span style="color:#676E95;">    //             ),</span></span>
<span class="line"><span style="color:#676E95;">    //             payload: {</span></span>
<span class="line"><span style="color:#676E95;">    //                 &quot;bar&quot;: Value {</span></span>
<span class="line"><span style="color:#676E95;">    //                     kind: Some(</span></span>
<span class="line"><span style="color:#676E95;">    //                         IntegerValue(</span></span>
<span class="line"><span style="color:#676E95;">    //                     12,</span></span>
<span class="line"><span style="color:#676E95;">    //                     ),</span></span>
<span class="line"><span style="color:#676E95;">    //                     ),</span></span>
<span class="line"><span style="color:#676E95;">    //                 },</span></span>
<span class="line"><span style="color:#676E95;">    //                 &quot;foo&quot;: Value {</span></span>
<span class="line"><span style="color:#676E95;">    //                     kind: Some(</span></span>
<span class="line"><span style="color:#676E95;">    //                         StringValue(</span></span>
<span class="line"><span style="color:#676E95;">    //                     &quot;Bar&quot;,</span></span>
<span class="line"><span style="color:#676E95;">    //                     ),</span></span>
<span class="line"><span style="color:#676E95;">    //                     ),</span></span>
<span class="line"><span style="color:#676E95;">    //                 },</span></span>
<span class="line"><span style="color:#676E95;">    //             },</span></span>
<span class="line"><span style="color:#676E95;">    //             score: 1.0000001,</span></span>
<span class="line"><span style="color:#676E95;">    //             version: 0,</span></span>
<span class="line"><span style="color:#676E95;">    //             vectors: None,</span></span>
<span class="line"><span style="color:#676E95;">    //         },</span></span>
<span class="line"><span style="color:#676E95;">    //     ],</span></span>
<span class="line"><span style="color:#676E95;">    //     time: 9.5394e-5,</span></span>
<span class="line"><span style="color:#676E95;">    // }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> found_point </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> search_result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_iter</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">unwrap</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> payload </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> found_point</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">payload</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> baz_payload </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> payload</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">baz</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">unwrap</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">into_json</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">baz: </span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> baz_payload</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">    // baz: {&quot;qux&quot;:&quot;quux&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Ok</span><span style="color:#89DDFF;">(())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Or run the example from this project directly:</p>`,13),e=[o];function t(c,r,F,D,y,C){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{i as __pageData,u as default};
