import{_ as s,o as a,c as n,a as o}from"./app.9360254b.js";const d=JSON.parse('{"title":"Design Maestro","description":"","frontmatter":{"title":"Design Maestro"},"headers":[{"level":2,"title":"Podium on Product Hunt! \u{1F389}","slug":"podium-on-product-hunt-\u{1F389}","link":"#podium-on-product-hunt-\u{1F389}","children":[]},{"level":2,"title":"Design Maestro FREE","slug":"design-maestro-free","link":"#design-maestro-free","children":[]},{"level":2,"title":"Predefined Macros","slug":"predefined-macros","link":"#predefined-macros","children":[]},{"level":2,"title":"Create a custom Prompt","slug":"create-a-custom-prompt","link":"#create-a-custom-prompt","children":[]},{"level":2,"title":"Confirm & Cancel actions","slug":"confirm-cancel-actions","link":"#confirm-cancel-actions","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"relativePath":"Projects/Design Maestro.md"}'),e={name:"Projects/Design Maestro.md"},l=o(`<h1 id="design-maestro" tabindex="-1">Design Maestro <a class="header-anchor" href="#design-maestro" aria-hidden="true">#</a></h1><blockquote><p>This project is no longer under development. It has been replaced by the <a href="./Alice.html">Alice</a> app.</p></blockquote><p>This is a package of Keyboard Maestro macro, created for designers who wants to optimise their workflow in macOS / Figma or Webflow.</p><p><img src="https://assets.website-files.com/61b2fbca6d7f8d1f991971f3/61b2fd7ff4169b747cf8a134_DM%20Logo.svg" alt=""></p><h2 id="podium-on-product-hunt-\u{1F389}" tabindex="-1">Podium on Product Hunt! \u{1F389} <a class="header-anchor" href="#podium-on-product-hunt-\u{1F389}" aria-hidden="true">#</a></h2><p>In June 2022 Design Maestro took a 3rd place on Product Hunt</p><p><img src="https://space.overment.com/product-hunt-dm-5EOI1/product-hunt-dm.png" alt=""></p><h2 id="design-maestro-free" tabindex="-1">Design Maestro FREE <a class="header-anchor" href="#design-maestro-free" aria-hidden="true">#</a></h2><p>The project was published at the end of March 2022 as a free version of 10 macros: <a href="https://designmaestro.io" target="_blank" rel="noreferrer">https://designmaestro.io</a></p><p>In May 2022, I discovered an action in Keyboard Maestro called Custom HTML Prompt, which is intended to allow you to display a dialog box based on your own HTML code. I decided to take advantage of this to create a fully customized interface for Design Maestro, which looks as follows:</p><p><img src="https://space.overment.com/Screen-Shot-2022-05-16-17-45-51-GsQ2U/Screen-Shot-2022-05-16-17-45-51.png" alt=""></p><p>The entire interface was created with HTML/CSS and JavaScript with Svelte framework bundled with <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vitejs.dev</a>. What&#39;s more the whole interface is based on JSON objects which means that you can create your own list, prompts and forms.</p><p><img src="https://space.overment.com/Shared-Image-2022-05-18-09-15-56-Z9bUO/Shared-Image-2022-05-18-09-15-56.png" alt=""></p><h2 id="predefined-macros" tabindex="-1">Predefined Macros <a class="header-anchor" href="#predefined-macros" aria-hidden="true">#</a></h2><p>We have created a set of predefined, plug&amp;play macros you can use right away. DesignMaestro macros were created with designers in mind to improving their work by saving time on repeatitive tasks.</p><p><strong>This includes:</strong></p><ul><li>optimizing image file sizes (with tinyPNG API)</li><li>removing backround from selected images (with <a href="http://remove.bg" target="_blank" rel="noreferrer">remove.bg</a> API)</li><li>assets picker</li><li>color picker (from library)</li><li>global system picker (copying hex color from pixel which is pointed with a mouse)</li><li>screen OCR</li><li>quick translation &amp; searching</li><li>quick creating a figma, notion and webflow projects</li><li>pasting <code>Lorem ipsum dolor sit amet, consectetur adipiscing elit interdum hendrerit ex vitae sodales.</code></li></ul><p>Those macros are available here for free: <a href="https://designmaestro.io" target="_blank" rel="noreferrer">https://designmaestro.io</a>.</p><h2 id="create-a-custom-prompt" tabindex="-1">Create a custom Prompt <a class="header-anchor" href="#create-a-custom-prompt" aria-hidden="true">#</a></h2><p>DesignMaestro allows you to create a simple form which contains:</p><ul><li>a title &amp; description</li><li>form inputs (text, textarea, select, color, radio, datetime-local)</li><li>actions buttons (confirm and cancel)</li></ul><p>An example looks like this:</p><p><img src="https://space.overment.com/Shared-Image-2022-05-17-14-17-46-tQzvt/Shared-Image-2022-05-17-14-17-46.png" alt=""></p><p>In order to generate this prompt like this, basically you have to:</p><ol><li>Create a JSON object and save it&#39;s stringify version in a <code>DMLauncher</code> variable of Keyboard Maestro.</li><li>Use <code>Execute a Macro</code> action and trigger <code>(util) Render</code> macro.</li></ol><p>All input values will be saved in Keyboard Maestro variables and names of those variables will match inputs <code>name</code> field. For example: <code>&lt;input name=&quot;example&quot; /&gt;</code> value will be saved in a variable with a name <code>example</code>.</p><p>| Please note that those variables will be saved only if Prompt will be ended with a confirmation (pressing <code>Enter</code> or <code>Primary button</code>)</p><p><strong>JSON reference both for prompt and lists configuration looks like this:</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 &quot;type&quot;: &quot;prompt&quot;, // prompt or list</span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 </span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 &quot;actionType&quot;: &quot;default&quot;, // required only for type: &quot;list&quot;. default - trigger macro by name | download - downloads a image file and set its content to clipboard | copy - copy a value of list item to a clipboard</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 &quot;header&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;active&quot;: true,</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;title&quot;: &quot;&quot;, // prompt header</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;description&quot;: &quot;&quot;  // prompt description</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 },</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 &quot;actions&quot;: { // custom prompt actions</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;mode&quot;: &quot;decision&quot;, // decision | confirm. Decision displays boths confirmation &amp; cancel buttons and confirm displays just a confirm button</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;visible&quot;: true, // true | false - with type of list, actions should be set to false</span></span>
<span class="line"><span style="color:#A6ACCD;">bra</span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;confirmLabel&quot;: &quot;Translate&quot;, // confirm button label</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 &quot;cancelLabel&quot;: &quot;Nevermind&quot; // cancel button label</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 },</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 &quot;inputs&quot;: [] // see a reference below. This is required for \`type: prompt\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;list&quot;: [] // see a reference below. This is required for \`type: list\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>JSON reference for inputs looks like this:</strong></p><p>As you can see it&#39;s an array of objects describing each input field.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// TEXT / TEXTAREA / DATE INPUT FIELD</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// text | textarea | datetime-local </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">textVar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// value of this input is connected with KM variable with this name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This is a text field</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// input label</span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">default value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// it can be set right here or by setting a KM Variable with a name coresponding to this input name. </span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Type something</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// input placeholder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">focused</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// autofocus. Make sure to have a single one for each prompt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">rows</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// for textarea only! Default: 8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 </span><span style="color:#89DDFF;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// COLOR picker input</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">colorVar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// value of this input is connected with KM variable with this name.</span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#ffffff</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// it can be set right here or by setting a KM Variable with a name coresponding to this input name. </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Quick Snippet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// input label</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// SELECT input</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">select</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">selectVar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// value of this input is connected with KM variable with this name.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Select something</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// input label</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Choose</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// input placeholder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en/pl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// default value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\xA0 \xA0 \xA0 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">focused</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// autofocus. Make sure to have a single one for each prompt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">options</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// An array of options </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// Option label </span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">option1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// Option value</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">selected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// true / false is selected</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p><strong>JSON reference for list items looks like this:</strong></p><p>As you can see it&#39;s an array of objects describing each list item.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">  {</span></span>
<span class="line"><span style="color:#A6ACCD;">	  &quot;label&quot;: &quot;&quot;, // list item main label</span></span>
<span class="line"><span style="color:#A6ACCD;">	  &quot;value&quot;: &quot;&quot;, // value of an item. May be: a macro name to trigger, value to be copied to clipboard or an image file needed to be downloaded and copied to clipboard</span></span>
<span class="line"><span style="color:#A6ACCD;">	  &quot;description&quot;:&quot;&quot; // description of an item, is showing on a right side</span></span>
<span class="line"><span style="color:#A6ACCD;">	  &quot;thumbnail&quot;: &quot;&quot; // (optional) url to a thumbnail (must be public and point to the image file)</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="confirm-cancel-actions" tabindex="-1">Confirm &amp; Cancel actions <a class="header-anchor" href="#confirm-cancel-actions" aria-hidden="true">#</a></h2><p>While prompt is displayed there&#39;re two ways to close it: by <code>confirming</code>, which means saving a variables to Keyboard Maestro or by <code>cancelling</code> and just closing a window.</p><p>In order to make sure that following actions won&#39;t be activated, just use <code>if statement</code> and check if a variable called <code>DMContinue</code> is set to <code>true</code>, like so:</p><p><img src="https://space.overment.com/Shared-Image-2022-05-17-14-35-31-B6KCc/Shared-Image-2022-05-17-14-35-31.png" alt=""></p><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-hidden="true">#</a></h2><p>In order to generate a new prompt you need to:</p><ul><li>create a configuration JSON</li><li>add <code>inputs</code> (for type: prompt) and <code>list</code> (for type: list)</li><li>trigger a macro called <code>(util) Render</code> with <code>Execute a Macro</code> action.</li></ul>`,42),p=[l];function t(r,c,i,D,y,u){return a(),n("div",null,p)}const A=s(e,[["render",t]]);export{d as __pageData,A as default};
